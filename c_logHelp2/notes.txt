1. Command for debugging from the terminal: gcc -g <somefile>

2.
Undefined symbols for architecture x86_64:
"SearchLogic::searchLogic(std::1::basic_string<char, std::1::char_traits, std::1::allocator >, std::1::basic_string<char, std::1::char_traits, std::1::allocator >, std::1::basic_string<char, std::1::char_traits, std::1::allocator >)", referenced from:
_main in searchDriver-2efc36.o
"SearchLogic::SearchLogic()", referenced from:
_main in searchDriver-2efc36.o
"Search::Search(std::1::basic_string<char, std::1::char_traits, std::1::allocator >)", referenced from:
_main in searchDriver-2efc36.o
"Search::Search(std::1::basic_string<char, std::1::char_traits, std::1::allocator >, std::1::basic_string<char, std::1::char_traits, std::1::allocator >)", referenced from:
_main in searchDriver-2efc36.o
"Search::Search()", referenced from:
_main in searchDriver-2efc36.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)

I included <string> in the searchDriver.cpp file. I'll see if maybe that's why it can't find the "symbols."

No dice!

3. https://stackoverflow.com/questions/66057404/launch-program-does-not-exist-in-visual-studio-code
    I'm still getting this error in vscode.
    
4. I have copied the project into xcode as I have had better success with this IDE. Here is the resolution I found for the following error:
    https://pinkstone.co.uk/how-to-fix-no-rule-to-process-file-warning-in-xcode/
    
5. Yan Cherno says that MS VS proves the best IDE because it runs on the most ubiquitous OS in the world (Windows) and because it performs faster than Xcode. Fine. But what I have found is that Xcode shows me all the values of my variables during debugging and that it's easier to configure and keep operating than VSCode (granted VSCode is the lightweight version of MS VS).
    I can see, for instance, that my comparitor variable does not contain the user input string and therefore I must discover a manner for getting it to hold the user's input.

    The corresponding string variable also contains an entire while we want to read the file a word at a time to make the comparison.
    
4. When searching for the new.txt file, which I believed I had directed the program to
 deposit in a certain place, and upon not finding it, I discovered it may have been
 written after all.
 
 I ran the find command and, after receiving permission denied on sundry directories,
 it showed this:
 
 /System/Volumes/Data/Users/jamiehurd/Library/Developer/Xcode/DerivedData/c_logHelp2-fudatkpdnbdytzgnykjrciapnurn/Build/Products/Debug/new.txt
 
 I have confirmed. The new.txt contains the search string returned from my program!
 
 It sees that I direct it to create the new file and the new name, but it doesn't drop it in the
 path that I specified. I wonder why.
 
 Testing the following: http://stackoverflow.com/questions/14098836/ddg#14098917
 
 Creating the file and placing it in the working dir worked, but now writing to it is broken. I wonder why.
 
 Looks like it's also writing here still: /Users/jamiehurd/Library/Developer/Xcode/DerivedData/c_logHelp2-fudatkpdnbdytzgnykjrciapnurn/Build/Products/Debug/new.txt
 I'll test this again with a different string.
 The string in the text file for the above path should be "is" but it's still showing as "test," which
 reflects the original input.
 
5. http://stackoverflow.com/questions/1557265/ddg#1557282
   It could be a write access/permissions issue.
   Program now completes but it is still not writing after chmod 755 on the dir.
   CPU started reaching 100% after I changed permissions on the working directory.
   
   It can't read the new file path, so I'll roll back to using a relative path: "/new.txt"
   
   Opening the file with ios::out caused an imposition on the write procedure. Resolved.
   
6. I need to meet my own requirement to search files in a directory and the subdirectories. Way to go, self!
   It seems to me that passing in something like grep from shell would fit so much easier here, but
   as I research it, it seems like it might be overly complex. So, I'll first see if there's a
   straight C++ option.
   https://dev.to/aggsol/calling-shell-commands-from-c-8ej
   
7. Okay, let's talk about searching subdirectories in the path the user provides.
    https://stackoverflow.com/questions/10209310/how-to-search-a-file-in-subdirectories
    
    https://www.boost.org/doc/libs/1_49_0/libs/filesystem/v3/doc/reference.html#Class-recursive_directory_iterator
    
    http://synesis.com.au/software/recls/
    
    https://www.codeproject.com/questions/231424/how-to-find-the-sub-folders-in-directory-using-cpl
    This is all looking complex to me. Gee, I wish I would have left this for a stretch
    exercise.
    
8. Let's go with something that may prove easier (harvest the low hanging fruit first).
   Overwrite IPs and MAC addresses.
   https://cplusplus.com/forum/general/90814/
   
   https://stackoverflow.com/questions/15237898/better-solution-of-finding-a-pattern-of-a-string
   Find a pattern in a string search (for overwriting IPs and MAC addresses.)
   
   I found a regex to match IP addresses for overwriting those, but I found I needed to
   escape all the backslashes with another backslash, like this:
   \\b(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\b
 
